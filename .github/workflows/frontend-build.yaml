name: "Frontend Build"
on:
  issue_comment:
    types: [created]


permissions:
  pull-requests: write


jobs:
  build:
    name: Frontend Build
    runs-on: macos-15
    defaults:
      run:
        working-directory: ./kamekai
    if: ${{ github.actor == 'seafoodfry' && github.event.issue.pull_request && contains(github.event.comment.body, '/test') }}
    steps:
      - uses: actions/checkout@v4
      # See
      # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - uses: octokit/request-action@v2.x
        id: pr
        with:
          # See
          # https://docs.github.com/en/rest/pulls/pulls?apiVersion=2022-11-28#get-a-pull-request
          route: GET /repos/{owner}/{repo}/pulls/{pull_number}
          owner: ${{ github.event.repository.owner.login }}
          repo: ${{ github.event.repository.name }}
          pull_number: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump PR metadata raw
        run: "echo latest release: '${{ steps.pr.outputs.data }}'"
      - uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ CI is running...'
            })

      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr.outputs.data.head.ref }}
      - name: Check ref
        run: |
          git log -n1
          git branch


      # See
      # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/workflow-commands-for-github-actions#environment-files
      - name: Set a Remainder about the Version
        run: |
          echo "::notice file=./src-tauri/tauri.conf.json,line=4,col=15,endColumn=19::This will be the version used for the build"
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: aarch64-apple-darwin
          components: rustfmt
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install jq
        run: brew install jq
      - name: Build Apple Disk Image for M chips
        run: |
          corepack enable pnpm
          corepack use pnpm@latest
          make build
      # See
      # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/workflow-commands-for-github-actions#environment-files
      - name: Get App Version (needed to find the build)
        run: |
          APP_VERSION=$(cat src-tauri/tauri.conf.json| jq -r '.version')
          echo "APP_VERSION=${APP_VERSION}" >> $GITHUB_ENV
          echo "APP_VERSION=${APP_VERSION}"
      - name: Sign DMG
        run: |
          codesign --force --deep --sign - ./src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/kamekai_${{ env.APP_VERSION }}_aarch64.dmg
      - uses: actions/upload-artifact@v4
        with:
          name: kamekai_${{ env.APP_VERSION }}_aarch64.dmg
          path: ./kamekai/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/kamekai_${{ env.APP_VERSION }}_aarch64.dmg
          if-no-files-found: error
          retention-days: 1

