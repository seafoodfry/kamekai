# Checkout these other ways of doing this:
#
# 1. https://github.com/peter-evans/slash-command-dispatch
# 2. https://github.com/imjohnbo/ok-to-test/tree/master
name: "Run on Comments"
on:
  issue_comment:
    types: [created]


permissions:
  pull-requests: write  # To post comments on PRs.
  statuses: write       # To update CI statuses.


jobs:
  setup:
    name: CI
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'seafoodfry' && github.event.issue.pull_request && contains(github.event.comment.body, '/test') }}
    outputs:
      pr: ${{ steps.pr.outputs.data }}
    steps:
      - uses: actions/checkout@v4
      # See
      # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - uses: octokit/request-action@v2.x
        id: pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # See
          # https://docs.github.com/en/rest/pulls/pulls?apiVersion=2022-11-28#get-a-pull-request
          route: GET /repos/{owner}/{repo}/pulls/{pull_number}
          owner: ${{ github.event.repository.owner.login }}
          repo: ${{ github.event.repository.name }}
          pull_number: ${{ github.event.issue.number }}
      - name: Dump PR metadata raw
        run: "echo pr metadata: '${{ steps.pr.outputs.data }}'"
      - uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ CI is running...\nCheckout https://github.com/seafoodfry/kamekai/actions/runs/${{ github.run_id }}'
            })

      - name: Dump PR ref
        run: "echo checking out ref: '${{ fromJson(steps.pr.outputs.data).head.ref }}'"
      - uses: actions/checkout@v4
        with:
          ref: ${{ fromJson(steps.pr.outputs.data).head.ref }}

      # https://docs.github.com/en/rest/commits/statuses?apiVersion=2022-11-28#create-a-commit-status
      - uses: octokit/request-action@v2.x
        id: create_check_run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          route: POST /repos/{owner}/{repo}/statuses/{sha}
          owner: ${{ github.event.repository.owner.login }}
          repo: ${{ github.event.repository.name }}
          sha: ${{ fromJson(steps.pr.outputs.data).head.sha }}
          state: pending
          target_url:  https://github.com/seafoodfry/kamekai/actions/runs/${{ github.run_id }}
          context: github-action/command
          description: "CI in progress"

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ fromJson(needs.setup.outputs.pr).head.ref }}
      - name: Check ref
        run: |
          git log -n1
          git branch
  
  finalize:
    needs: [setup, build]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: octokit/request-action@v2.x
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          route: POST /repos/{owner}/{repo}/statuses/{sha}
          owner: ${{ github.event.repository.owner.login }}
          repo: ${{ github.event.repository.name }}
          sha: ${{ fromJson(needs.setup.outputs.pr).head.sha }}
          # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#job-context
          state: ${{ needs.build.result == 'success' && needs.setup.result == 'success' && job.status == 'success' && 'success' || 'failure' }}
          target_url:  https://github.com/seafoodfry/kamekai/actions/runs/${{ github.run_id }}
          context: github-action/command
          description: "CI completed"